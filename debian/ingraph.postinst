#!/bin/bash
# postinst script for ingraph
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

uriescape() {
    echo "$(perl -MCGI::Util -e 'print CGI::Util::escape($ARGV[0]);' "$1")"
}

generate_dbconf() {
    local file="/etc/ingraph/ingraph-database.conf"
    local dbconfig="/etc/dbconfig-common/ingraph.conf"

    # load dbconfig file
    if [ -f "$dbconfig" ]; then
        source $dbconfig
    else
        echo "database config failed: file $dbconfig does not exist" >&2
        return
    fi

    # leave when dbconfig not enabled
    if [ "$dbc_install" != "true" ]; then
        echo "database config failed: dbconfig-common for \"$(basename $dbconfig .conf)\" not enabled!" 
        return
    fi

    # create tempfile
    local tempfile=$(tempfile -m 600 -p "$(basename $file)")

    # add a colon to port
    [ "$dbc_dbport" != "" ] && dbc_dbport=":$dbc_dbport"
    dbc_edbuser=$(uriescape $dbc_dbuser)
    dbc_edbpass=$(uriescape $dbc_dbpass)
    dbc_edbname=$(uriescape $dbc_dbname)
    
    # allow pgsql socket
    [ "$dbc_server" = "" ] && [ "$dbc_authmethod_user" = "ident" ] && dbc_server="%2Fvar%2Frun%2Fpostgresql"

    # uri escape the vars
    # build the dsn
    local dsn="$dbc_dbtype://$dbc_edbuser:$dbc_edbpass@${dbc_server:=localhost}$dbc_dbport/$dbc_edbname"

    # write xml to temp
    (
    echo "#################################"
    echo "# database configuration"
    echo "# "
    echo "# this file is auto generated"
    echo "# based on dbconfig-common settings"
    echo "#################################"
    echo "dsn='$dsn'"
    echo ""
    ) > $tempfile

    # replace the file with ucf
    ucf --debconf-ok $tempfile $file
    
    echo "database config successful: $file"
    rm -f $tempfile 
}

generate_xmlrpc() {
    local password="$1"
    local file="/etc/ingraph/ingraph-xmlrpc.conf"

    # create tempfile
    local tempfile=$(tempfile -m 600 -p "$(basename $file)")

    # escape quotes
    e_password="$(echo "$password" | sed s/\'/\\\'/g)"

    # write data to temp
    (
    echo "#################################"
    echo "# xmlrpc configuration"
    echo "# "
    echo "# this file is auto generated"
    echo "# see ingraph-xmlrpc.conf.example"
    echo "#################################"
    echo "xmlrpc_username = 'ingraph'"
    echo "xmlrpc_password = '$e_password'"
    echo "xmlrpc_address = '127.0.0.1'"
    echo "xmlrpc_port = 5000"
    echo ""
    ) > $tempfile

    # replace the file with ucf
    ucf --debconf-ok $tempfile $file
    
    echo "xmlrpc config successful: $file"
    rm -f $tempfile 
}


setperm() {
    local user="$1"
    local group="$2"
    local mode="$3"
    local file="$4"
    shift 4
    # only do something when no setting exists
    if ! dpkg-statoverride --list "$file" >/dev/null 2>&1; then
      chown "$user":"$group" "$file"
      chmod "$mode" "$file"
    fi
}

case "$1" in
    configure)
    # create the local user
    if ! getent passwd ingraph > /dev/null ; then
      echo 'Adding system-user for inGraph' 1>&2
      adduser --system --group --home /etc/ingraph \
              --disabled-login --force-badname ingraph > /dev/null
    fi

    # Install DB
    . /usr/share/debconf/confmodule
    . /usr/share/dbconfig-common/dpkg/postinst
    dbc_go ingraph $@
    
    generate_dbconf

    # xml rpc config
    db_get ingraph/xmlrpc-password || true
    xmlrpcpw="$RET"
    
    if [ "$xmlrpcpw" != "" ]; then
        generate_xmlrpc "$xmlrpcpw"
    else
        echo "Warning: XMLRPC password is empty!" >&2
    fi

    # permissions for config
    [ -f /etc/ingraph/ingraph-database.conf ] && setperm ingraph ingraph 0640 /etc/ingraph/ingraph-database.conf
    [ -f /etc/ingraph/ingraph-xmlrpc.conf ] && setperm ingraph ingraph 0640 /etc/ingraph/ingraph-xmlrpc.conf
    
    # spooldir permissions
    setperm ingraph nagios 0770 /var/spool/ingraph/perfdata

    # prepare logdir
    [ -d /var/log/ingraph ] || mkdir /var/log/ingraph
    setperm ingraph adm 0750 /var/log/ingraph
    
    # move old logs
    find /var/log -maxdepth 1 -name "ingraphd.log*" -exec mv {} /var/log/ingraph/ \;
    find /var/log -maxdepth 1 -name "ingraph-collectord.log*" -exec mv {} /var/log/ingraph/ \;

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
