#!/bin/sh
# postinst script for ingraph
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

setperm() {
    local user="$1"
    local group="$2"
    local mode="$3"
    local file="$4"
    shift 4
    # only do something when no setting exists
    if ! dpkg-statoverride --list "$file" >/dev/null 2>&1; then
      chown "$user":"$group" "$file"
      chmod "$mode" "$file"
    fi
}

uriescape() {
    echo "$(perl -MCGI::Util -e 'print CGI::Util::escape($ARGV[0]);' "$1")"
}

generate_xmlrpc() {
    local password="$1"
    local file="/etc/ingraph/icinga-web.xml"

    # create tempfile
    local tempfile=$(tempfile -m 600 -p "$(basename $file)")

    # get Icinga Web version
    local icingaweb_version=$(dpkg-query --showformat "\${Version}" --show icinga-web)

    # escape quotes
    e_password="$(uriescape  "$password")"

    # write data to temp
    echo '<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns="http://agavi.org/agavi/config/parts/module/1.0"
    xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0">
<!--
this file is autogenerated by the debian packaging
see icinga-web.xml.sample
-->
    <setting name="xmlrpc">
        <ae:parameter name="host">localhost</ae:parameter>
        <ae:parameter name="port">5000</ae:parameter>
        <ae:parameter name="user">ingraph</ae:parameter>
        <ae:parameter name="pass">'"$e_password"'</ae:parameter>
    </setting>' > $tempfile

    # compare against icinga-web version
    tooold=0
    dpkg --compare-versions "$icingaweb_version" "<" "1.8" && tooold=1
    if [ "$tooold" -eq 1 ]; then
        # inserting other template reference
        # due to icinga-web older than 1.8
        echo "inserting template reference for icinga-web < 1.8..."
        echo '
    <!--
        template settings for icinga-web < 1.8
        if you updated icinga-web and want the new look
        run:   dpkg-reconfigure icinga-web-ingraph
    -->
    <setting name="agavi.include.templateExtensions">
        <ae:parameter>%core.module_dir%/inGraph/config/templateExtensions/inGraphServiceExtension-legacy.xml</ae:parameter>
        <ae:parameter>%core.module_dir%/inGraph/config/templateExtensions/inGraphHostExtension-legacy.xml</ae:parameter>
    </setting>' >> $tempfile
    fi

    echo '
</settings>' >> $tempfile

    # replace the file with ucf
    ucf --debconf-ok $tempfile $file
    
    echo "xmlrpc config successful: $file"
    rm -f $tempfile 
}


case "$1" in
    configure)
    . /usr/share/debconf/confmodule

    # xml rpc config
    db_get ingraph/xmlrpc-password || true
    xmlrpcpw="$RET"
    
    if [ "$xmlrpcpw" != "" ]; then
        generate_xmlrpc "$xmlrpcpw"
    else
        echo "Warning: XMLRPC password is empty!" >&2
        generate_xmlrpc "changeme"
    fi

    # clear cache
    if [ -x /usr/lib/icinga-web/bin/clearcache.sh ]; then
        echo "clearing icinga-web's cache..."
        /usr/lib/icinga-web/bin/clearcache.sh || true
    else
        echo "can't clear  icinga-web's cache, /usr/lib/icinga-web/bin/clearcache.sh not executeable!" >&2
    fi

    # config permissions
    if [ -f /etc/ingraph/icinga-web.xml ]; then
        setperm root www-data 0640 /etc/ingraph/icinga-web.xml
    fi
    
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
