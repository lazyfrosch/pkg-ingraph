#! /bin/sh -e
### BEGIN INIT INFO
# Provides:           ingraph-collectord ingraph-collector
# Required-Start:     $network $remote_fs $syslog ingraphd
# Required-Stop:      $network $remote_fs $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  inGraph perfdata collector daemon
# Description:        inGraph (graphing solution for Icinga/Nagios) daemon
### END INIT INFO
#
# Author:    Markus Frosch <markus@lazyfrosch.de>

set -e

. /lib/lsb/init-functions

export PATH=/sbin:/usr/sbin:/bin:/usr/bin

SCRIPTNAME=/etc/init.d/ingraph
INGRAPH_CHDIR=/etc/ingraph
INGRAPH_USER=ingraph
INGRAPH_GROUP=ingraph

INGRAPHCOLLECTORD_NAME="ingraph-collectord"
INGRAPHCOLLECTORD_DESC="inGraph collector daemon"
INGRAPHCOLLECTORD_DAEMON="/usr/sbin/ingraph-collectord"
INGRAPHCOLLECTORD_OPTS=""
INGRAPHCOLLECTORD_PIDFILE=/var/run/ingraph-collectord.pid

test -x $INGRAPHCOLLECTORD_DAEMON || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/ingraph ] && . /etc/default/ingraph

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started
    start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
        || return 1
    exec 3>&- # close fd3
    start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON \
                      --chuid $INGRAPH_USER:$INGRAPH_GROUP -- $DAEMON_ARGS || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
    # --exec $DAEMON   ## not possible with python binary
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2
    # Wait for children to finish too if this is a daemon that forks
    # and if the daemon is only ever run from this initscript.
    # If the above conditions are not satisfied then add some other code
    # that waits for the process to drop all resources that could be
    # needed by services started subsequently.  A last resort is to
    # sleep for some time.
    start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
    [ "$?" = 2 ] && return 2
    # Many daemons don't delete their pidfiles when they exit.
    rm -f $PIDFILE
    return "$RETVAL"
}

DESC=$INGRAPHCOLLECTORD_DESC
NAME=$INGRAPHCOLLECTORD_NAME
DAEMON=$INGRAPHCOLLECTORD_DAEMON
DAEMON_ARGS="$INGRAPHCOLLECTORD_OPTS -d $INGRAPH_CHDIR -p $INGRAPHCOLLECTORD_PIDFILE start"
PIDFILE=$INGRAPHCOLLECTORD_PIDFILE
touch $PIDFILE
chown $INGRAPH_USER:$INGRAPH_GROUP $PIDFILE

case "$1" in
  start)
    log_daemon_msg "Starting $DESC " "$NAME"
    do_start
    case "$?" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac
  ;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME" && return 0 || return $?
    ;;
  restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;; # Old process is still running
            *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
      *)
          # Failed to stop
        log_end_msg 1
        ;;
    esac
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac

:
